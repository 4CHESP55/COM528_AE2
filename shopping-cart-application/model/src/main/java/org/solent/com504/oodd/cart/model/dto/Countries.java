/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package org.solent.com504.oodd.cart.model.dto;

import java.util.Map;
import static java.util.Map.entry;

/**
 *
 * @author Admin
 */
public class Countries {
    
    public static Map<String, String> africaMap = Map.ofEntries(
            entry("DZ", "Algeria"),
            entry("AO", "Angola"),
            entry("BJ", "Benin"),
            entry("BW", "Botswana"),
            entry("BF", "Burkina Faso"),
            entry("BI", "Burundi"),
            entry("CM", "Cameroon"),
            entry("CV", "Cape Verde"),
            entry("CF", "Central African Republic"),
            entry("TD", "Chad"),
            entry("KM", "Comoros"),
            entry("CG", "Congo - Brazzaville"),
            entry("CD", "Congo - Kinshasa"),
            entry("CI", "Côte d’Ivoire"),
            entry("DJ", "Djibouti"),
            entry("EG", "Egypt"),
            entry("GQ", "Equatorial Guinea"),
            entry("ER", "Eritrea"),
            entry("ET", "Ethiopia"),
            entry("GA", "Gabon"),
            entry("GM", "Gambia"),
            entry("GH", "Ghana"),
            entry("GN", "Guinea"),
            entry("GW", "Guinea-Bissau"),
            entry("KE", "Kenya"),
            entry("LS", "Lesotho"),
            entry("LR", "Liberia"),
            entry("LY", "Libya"),
            entry("MG", "Madagascar"),
            entry("MW", "Malawi"),
            entry("ML", "Mali"),
            entry("MR", "Mauritania"),
            entry("MU", "Mauritius"),
            entry("YT", "Mayotte"),
            entry("MA", "Morocco"),
            entry("MZ", "Mozambique"),
            entry("NA", "Namibia"),
            entry("NE", "Niger"),
            entry("NG", "Nigeria"),
            entry("RW", "Rwanda"),
            entry("RE", "Réunion"),
            entry("SH", "Saint Helena"),
            entry("SN", "Senegal"),
            entry("SC", "Seychelles"),
            entry("SL", "Sierra Leone"),
            entry("SO", "Somalia"),
            entry("ZA", "South Africa"),
            entry("SD", "Sudan"),
            entry("SZ", "Swaziland"),
            entry("ST", "São Tomé and Príncipe"),
            entry("TZ", "Tanzania"),
            entry("TG", "Togo"),
            entry("TN", "Tunisia"),
            entry("UG", "Uganda"),
            entry("EH", "Western Sahara"),
            entry("ZM", "Zambia"),
            entry("ZW", "Zimbabwe"));

    public static Map<String, String> americasMap = Map.ofEntries(
            entry("AI", "Anguilla"),
            entry("AG", "Antigua and Barbuda"),
            entry("AR", "Argentina"),
            entry("AW", "Aruba"),
            entry("BS", "Bahamas"),
            entry("BB", "Barbados"),
            entry("BZ", "Belize"),
            entry("BM", "Bermuda"),
            entry("BO", "Bolivia"),
            entry("BR", "Brazil"),
            entry("VG", "British Virgin Islands"),
            entry("CA", "Canada"),
            entry("KY", "Cayman Islands"),
            entry("CL", "Chile"),
            entry("CO", "Colombia"),
            entry("CR", "Costa Rica"),
            entry("CU", "Cuba"),
            entry("DM", "Dominica"),
            entry("DO", "Dominican Republic"),
            entry("EC", "Ecuador"),
            entry("SV", "El Salvador"),
            entry("FK", "Falkland Islands"),
            entry("GF", "French Guiana"),
            entry("GL", "Greenland"),
            entry("GD", "Grenada"),
            entry("GP", "Guadeloupe"),
            entry("GT", "Guatemala"),
            entry("GY", "Guyana"),
            entry("HT", "Haiti"),
            entry("HN", "Honduras"),
            entry("JM", "Jamaica"),
            entry("MQ", "Martinique"),
            entry("MX", "Mexico"),
            entry("MS", "Montserrat"),
            entry("AN", "Netherlands Antilles"),
            entry("NI", "Nicaragua"),
            entry("PA", "Panama	"),
            entry("PY", "Paraguay"),
            entry("PE", "Peru"),
            entry("PR", "Puerto Rico"),
            entry("BL", "Saint Barthélemy"),
            entry("KN", "Saint Kitts and Nevis"),
            entry("LC", "Saint Lucia"),
            entry("MF", "Saint Martin"),
            entry("PM", "Saint Pierre and Miquelon"),
            entry("VC", "Saint Vincent and the Grenadines"),
            entry("SR", "Suriname"),
            entry("TT", "Trinidad and Tobago"),
            entry("TC", "Turks and Caicos Islands"),
            entry("VI", "U.S. Virgin Islands"),
            entry("US", "United States"),
            entry("UY", "Uruguay"),
            entry("VE", "Venezuela"));

    public static Map<String, String> asiaMap = Map.ofEntries(
            entry("AF", "Afghanistan"),
            entry("AM", "Armenia"),
            entry("AZ", "Azerbaijan"),
            entry("BH", "Bahrain"),
            entry("BD", "Bangladesh"),
            entry("BT", "Bhutan"),
            entry("BN", "Brunei"),
            entry("KH", "Cambodia"),
            entry("CN", "China"),
            entry("GE", "Georgia"),
            entry("HK", "Hong Kong SAR China"),
            entry("IN", "India"),
            entry("ID", "Indonesia"),
            entry("IR", "Iran"),
            entry("IQ", "Iraq"),
            entry("IL", "Israel"),
            entry("JP", "Japan"),
            entry("JO", "Jordan"),
            entry("KZ", "Kazakhstan"),
            entry("KW", "Kuwait"),
            entry("KG", "Kyrgyzstan"),
            entry("LA", "Laos"),
            entry("LB", "Lebanon"),
            entry("MO", "Macau SAR China"),
            entry("MY", "Malaysia"),
            entry("MV", "Maldives"),
            entry("MN", "Mongolia"),
            entry("MM", "Myanmar [Burma]"),
            entry("NP", "Nepal"),
            entry("NT", "Neutral Zone"),
            entry("KP", "North Korea"),
            entry("OM", "Oman"),
            entry("PK", "Pakistan"),
            entry("PS", "Palestinian Territories"),
            entry("YD", "People's Democratic Republic of Yemen"),
            entry("PH", "Philippines"),
            entry("QA", "Qatar"),
            entry("SA", "Saudi Arabia"),
            entry("SG", "Singapore"),
            entry("KR", "South Korea"),
            entry("LK", "Sri Lanka"),
            entry("SY", "Syria"),
            entry("TW", "Taiwan"),
            entry("TJ", "Tajikistan"),
            entry("TH", "Thailand"),
            entry("TL", "Timor-Leste"),
            entry("TR", "Turkey"),
            entry("TM", "Turkmenistan"),
            entry("AE", "United Arab Emirates"),
            entry("UZ", "Uzbekistan"),
            entry("VN", "Vietnam"),
            entry("YE", "Yemen"));

    public static Map<String, String> europeMap = Map.ofEntries(
            entry("AL", "Albania"),
            entry("AD", "Andorra"),
            entry("AT", "Austria"),
            entry("BY", "Belarus"),
            entry("BE", "Belgium"),
            entry("BA", "Bosnia and Herzegovina"),
            entry("BG", "Bulgaria"),
            entry("HR", "Croatia"),
            entry("CY", "Cyprus"),
            entry("CZ", "Czech Republic"),
            entry("DK", "Denmark"),
            entry("DD", "East Germany"),
            entry("EE", "Estonia"),
            entry("FO", "Faroe Islands"),
            entry("FI", "Finland"),
            entry("FR", "France"),
            entry("DE", "Germany"),
            entry("GI", "Gibraltar"),
            entry("GR", "Greece"),
            entry("GG", "Guernsey"),
            entry("HU", "Hungary"),
            entry("IS", "Iceland"),
            entry("IE", "Ireland"),
            entry("IM", "Isle of Man"),
            entry("IT", "Italy"),
            entry("JE", "Jersey"),
            entry("LV", "Latvia"),
            entry("LI", "Liechtenstein"),
            entry("LT", "Lithuania"),
            entry("LU", "Luxembourg"),
            entry("MK", "Macedonia"),
            entry("MT", "Malta"),
            entry("FX", "Metropolitan France"),
            entry("MD", "Moldova"),
            entry("MC", "Monaco"),
            entry("ME", "Montenegro"),
            entry("NL", "Netherlands"),
            entry("NO", "Norway"),
            entry("PL", "Poland"),
            entry("PT", "Portugal"),
            entry("RO", "Romania"),
            entry("RU", "Russia"),
            entry("SM", "San Marino"),
            entry("RS", "Serbia"),
            entry("CS", "Serbia and Montenegro"),
            entry("SK", "Slovakia"),
            entry("SI", "Slovenia"),
            entry("ES", "Spain"),
            entry("SJ", "Svalbard and Jan Mayen"),
            entry("SE", "Sweden"),
            entry("CH", "Switzerland"),
            entry("UA", "Ukraine"),
            entry("SU", "Union of Soviet Socialist Republics"),
            entry("GB", "United Kingdom"),
            entry("VA", "Vatican City"),
            entry("AX", "Åland Islands"));

    public static Map<String, String> oceaniaMap = Map.ofEntries(
            entry("AS", "American Samoa"),
            entry("AQ", "Antarctica"),
            entry("AU", "Australia"),
            entry("BV", "Bouvet Island"),
            entry("IO", "British Indian Ocean Territory"),
            entry("CX", "Christmas Island"),
            entry("CC", "Cocos [Keeling] Islands"),
            entry("CK", "Cook Islands"),
            entry("FJ", "Fiji"),
            entry("PF", "French Polynesia"),
            entry("TF", "French Southern Territories"),
            entry("GU", "Guam"),
            entry("HM", "Heard Island and McDonald Islands"),
            entry("KI", "Kiribati"),
            entry("MH", "Marshall Islands"),
            entry("FM", "Micronesia"),
            entry("NR", "Nauru"),
            entry("NC", "New Caledonia"),
            entry("NZ", "New Zealand"),
            entry("NU", "Niue"),
            entry("NF", "Norfolk Island"),
            entry("MP", "Northern Mariana Islands"),
            entry("PW", "Palau"),
            entry("PG", "Papua New Guinea"),
            entry("PN", "Pitcairn Islands"),
            entry("WS", "Samoa"),
            entry("SB", "Solomon Islands"),
            entry("GS", "South Georgia and the South Sandwich Islands"),
            entry("TK", "Tokelau"),
            entry("TO", "Tonga"),
            entry("TV", "Tuvalu"),
            entry("UM", "U.S. Minor Outlying Islands"),
            entry("VU", "Vanuatu"),
            entry("WF", "Wallis and Futuna"));
    
}
